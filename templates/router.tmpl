package server

import (
	"github.com/adrien3d/base-api/config"
	"net/http"
	"time"

	"github.com/adrien3d/base-api/controllers"
	"github.com/adrien3d/base-api/middlewares"

	"github.com/gin-gonic/gin"
)

// Index is the default place
func Index(c *gin.Context) {
	c.JSON(http.StatusOK, gin.H{"status": "success", "message": "You successfully reached the " + config.GetString(c, "mail_sender_name") + " API."})
}

// SetupRouter is the main routing point
func (a *API) SetupRouter() {
	router := a.Router

	router.Use(middlewares.ErrorMiddleware())

	router.Use(middlewares.CorsMiddleware(middlewares.Config{
		Origins:         "*",
		Methods:         "GET, PUT, POST, DELETE",
		RequestHeaders:  "Origin, Authorization, Content-Type",
		ExposedHeaders:  "",
		MaxAge:          50 * time.Second,
		Credentials:     true,
		ValidateHeaders: false,
	}))

	router.Use(middlewares.StoreMiddleware(a.Database))
	router.Use(middlewares.ConfigMiddleware(a.Config))

	router.Use(middlewares.EmailMiddleware(a.EmailSender))
	router.Use(middlewares.TextMiddleware(a.TextSender))

	authMiddleware := middlewares.AuthMiddleware() //User
	adminMiddleware := middlewares.AdminMiddleware()

	v1 := router.Group("/v1")
	{
		v1.GET("/", Index)

        {{- range . }}
            {{ $sing := singularize .ModelName }}
            {{ firstLower $sing }}s := v1.Group("/{{ firstLower .ModelName }}s")
            {
                {{ firstLower $sing }}s.Use(authMiddleware)
                {{- range .Methods  }}
                    {{- if eq . "Create" }}
                        {{ firstLower $sing }}s.POST("/",{{ firstLower $sing }}Controller.{{ . }}{{ title $sing }})
                    {{- else if eq . "Get" }}
                        {{ firstLower $sing }}s.GET("/:id",{{ firstLower $sing }}Controller.{{ . }}{{ title $sing }})
                    {{- else if eq . "GetAll" }}
                        {{ firstLower $sing }}s.GET("/",{{ firstLower $sing }}Controller.{{ . }}{{ title $sing }})
                    {{- else if eq . "Update" }}
                        {{ firstLower $sing }}s.PUT("/:id",{{ firstLower $sing }}Controller.{{ . }}{{ title $sing }})
                    {{- else if eq . "Delete" }}
                        {{ firstLower $sing }}s.DELETE("/:id",{{ firstLower $sing }}Controller.{{ . }}{{ title $sing }})
                    {{- end }}
                {{- end }}
            }
        {{- end }}
	}
}
